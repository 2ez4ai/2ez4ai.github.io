I"4<div align="center"><img src="../../../../assets/images/astroxygen_bg.png" alt="" width="700" />
</div>

<center>
  <p style="font-size:80%;">
Figure 1. Astroxygen.
  </p>
</center>

<h1 id="0-background">0. Background</h1>

<p>Finally this blog has something related to video games. This is my first Unity3D project after attending like three courses of Unity3D. This game is generally based on the <em>perfect match</em> map of <strong>Fall Guys: Ultimate Knockout</strong>, as I find the models of that are friendly given my poor modeling skills. Also, it innately allows me to personalize, to some extent, my game by using a different figure set rather than fruits.</p>

<div align="center"><img src="../../../../assets/images/fallguys_pm.png" alt="" width="450" />
</div>

<center>
  <p style="font-size:80%;">
Figure 2. The perfect match map of FullGuys.
  </p>
</center>

<h1 id="1-components">1. Components</h1>

<p>The scene includes two main components:</p>
<ul>
  <li>a screen to display the target figure and other information;</li>
  <li>a platform consisted of 16 tiles allowing players to stand on.</li>
</ul>

<p>For the players, there is only one controllable and others are actually scripts.</p>

<p>To make the falling reasonable, I use a picture of space as the background. For the choice of items of CSGO, that was my very original idea since they are fascinating and highly distinguishable.</p>

<h1 id="2-mechanism">2. Mechanism</h1>

<p>Actually, it occurred to me quite late that listing a time table for all scripts can relieve me a lot when doing such a periodical game (at the start of the project, I dived into each logic independently, and very often got stuck with their inconsistent logic). In each round, the game proceeds as follows:</p>
<ul>
  <li>-1.5s ~ 0.0s, ready for start;</li>
  <li>0.0s ~ 5.0s, uncover tiles randomly for memorisation;</li>
  <li>5.0s ~ 10.0s, uncover tiles randomly for memorisation; start counting down;</li>
  <li>10.s ~ 15.0s, cover tiles; create oxygen tank randomly;</li>
  <li>15.0s ~ 17.5s, disable moving ability of all players; uncover tiles to show the corresponding figures;</li>
  <li>17.5s ~ 20.0s, disable tiles that showing wrong figures;</li>
  <li>20.0s ~ , reset timer, tiles;</li>
</ul>

<p>Now I would like to summarize the detailed mechanism of each object.</p>

<p><strong>FallGuys</strong>: it is controlled by player via <code class="language-plaintext highlighter-rouge">CharacterController</code>. To avoid others jump over head that stacks fallguys,  I actually add a invisiable high cylinder for it.</p>

<p><strong>Computers</strong>: it is actually done by a lot of <code class="language-plaintext highlighter-rouge">Random.RandomRange()</code>. The move is done by <code class="language-plaintext highlighter-rouge">move()</code> of <code class="language-plaintext highlighter-rouge">CharacterController</code>, where I set the horizontal/vertical input manually according to their position. Somehow it does look like interesting and f</p>

<p>Oxygen:</p>

<p>Platform:</p>

<p>Screen:</p>

<p>SphereBlock:</p>

<h1 id="3">3.</h1>

:ET